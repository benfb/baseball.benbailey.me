<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Ben Does Baseball</title>
    <link>https://baseball.benbailey.me/categories/development/</link>
    <description>Recent content in Development on Ben Does Baseball</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Feb 2017 18:45:40 -0500</lastBuildDate><atom:link href="https://baseball.benbailey.me/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An App!</title>
      <link>https://baseball.benbailey.me/2017/02/an-app/</link>
      <pubDate>Wed, 22 Feb 2017 18:45:40 -0500</pubDate>
      
      <guid>https://baseball.benbailey.me/2017/02/an-app/</guid>
      <description>This week I made a Shiny interface to the win probability and description services. It can be viewed here. To do this, I had to set up hosting for both Shiny and my Elixir backend service. I also switched from embedding/posting the plots on Plotly to embedding them in the new Shiny application, which should help reduce costs. Learning more about Shiny made implementing the interface relatively simple. The generation of the graphs is now abstracted into a function that grabs JSON data from the API server I set up, which makes it much easier to generate graphs for any desired game.</description>
    </item>
    
    <item>
      <title>Descriptions and Probabilities</title>
      <link>https://baseball.benbailey.me/2017/02/descriptions-and-probabilities/</link>
      <pubDate>Wed, 08 Feb 2017 18:38:53 -0500</pubDate>
      
      <guid>https://baseball.benbailey.me/2017/02/descriptions-and-probabilities/</guid>
      <description>This week I mostly focused on experimenting with the Retrosheet and MLB Gameday API formats. Using the baseball umbrella application combined with R and Plotly, I generated a win expectancy graph for a random game.
In any given situation, the win expectancy is equivalent to the percentage of games that teams in that exact situation went on to win. To calculate the win probability of a situation, the application converts the situation into a hash using the number of outs, inning, number and position of base runners, and the current score, then looks it up in a table of historical win probabilities.</description>
    </item>
    
  </channel>
</rss>
