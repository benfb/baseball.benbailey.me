for(k in 1:steps){
Psum<-(f(t[k])*sin(2*pi*omega[j]*t[k])*delta/(b-a))
sum <- sum+Psum}
P[j]<-sum
}
plot(omega,P,type="l", col=2)
for(j in 0:omegasteps){
}
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2^11
deltaomega <- (endomega-startomega)/omegasteps
f <- function(x)3*sin(5*x)+2*sin(3*x)
a <- 0
b<- 10
steps <- 2^9
delta <- (b-a)/steps
omega <- seq(startomega, endomega,deltaomega)
t <- seq(a,b,delta)
P <- rep(0, omegasteps+1)
for(j in 0:omegasteps){
sum <- 0
for(k in 1:steps){
Psum<-(f(t[k])*sin(2*pi*omega[j]*t[k])*delta/(b-a))
sum <- sum+Psum}
P[j]<-sum
}
plot(omega,P,type="l", col=2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2^11
deltaomega <- (endomega-startomega)/omegasteps
f <- function(x) {
3*sin(5*x)+2*sin(3*x)
}
a <- 0
b<- 10
steps <- 2^9
delta <- (b-a)/steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a,b,delta)
P <- rep(0, omegasteps+1)
for(j in 0:omegasteps){
sum <- 0
for(k in 1:steps){
Psum<-(f(t[k])*sin(2*pi*omega[j]*t[k])*delta/(b-a))
sum <- sum + Psum
}
P[j]<-sum
}
plot(omega,P,type="l", col=2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2^11
deltaomega <- (endomega-startomega)/omegasteps
f <- function(x) {
3*sin(5*x)+2*sin(3*x)
}
a <- 0
b <- 10
steps <- 2^9
delta <- (b-a)/steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- vector()
for(j in 0:omegasteps){
sum <- 0
for(k in 1:steps){
Psum<-(f(t[k])*sin(2*pi*omega[j]*t[k])*delta/(b-a))
sum <- sum + Psum
}
P[j]<-sum
}
plot(omega,P,type="l", col=2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2^11
deltaomega <- (endomega-startomega)/omegasteps
f <- function(x) {
3*sin(5*x)+2*sin(3*x)
}
a <- 0
b <- 10
steps <- 2^9
delta <- (b-a)/steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- numeric(omegasteps) # could be omegasteps+1
for(j in 0:omegasteps){
sum <- 0
for(k in 1:steps){
Psum<-(f(t[k])*sin(2*pi*omega[j]*t[k])*delta/(b-a))
sum <- sum + Psum
}
P[j]<-sum
}
plot(omega,P,type="l", col=2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2^11
deltaomega <- (endomega-startomega)/omegasteps
f <- function(x) {
3*sin(5*x)+2*sin(3*x)
}
a <- 0
b <- 10
steps <- 2^9
delta <- (b-a)/steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- numeric(omegasteps+1) # could be omegasteps+1
for(j in 0:omegasteps){
sum <- 0
for(k in 1:steps){
Psum<-(f(t[k])*sin(2*pi*omega[j]*t[k])*delta/(b-a))
sum <- sum + Psum
}
P[j]<-sum
}
plot(omega,P,type="l", col=2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2^11
deltaomega <- (endomega-startomega)/omegasteps
f <- function(x) {
3*sin(5*x)+2*sin(3*x)
}
a <- 0
b <- 10
steps <- 2^9
deltat <- (b-a)/steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- numeric(omegasteps+1)
for(j in 0:omegasteps){
sum <- 0
for(k in 1:steps){
Psum<-(f(t[k])*sin(2*pi*omega[j]*t[k])*deltat/(b-a))
sum <- sum + Psum
}
P[j]<-sum
}
plot(omega, P, type="l", col=2)
source('~/Downloads/Spectrum.R')
?lapply
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- numeric(omegasteps + 1)
for (j in 0:omegasteps) {
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
P[j] <- sum
}
plot(omega, P, type = "l", col = 2)
?vapply
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- vapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
}, numeric())
plot(omega, P, type = "l", col = 2)
1:tsteps
P <- vapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
}, numeric())
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- vapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
sum
}, numeric())
plot(omega, P, type = "l", col = 2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- vapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
sum
}, numeric(1))
plot(omega, P, type = "l", col = 2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- numeric(omegasteps + 1)
for (j in 0:omegasteps) {
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
P[j] <- sum
}
P <- vapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
sum
}, numeric(30))
plot(omega, P, type = "l", col = 2)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
P <- numeric(omegasteps + 1)
for (j in 0:omegasteps) {
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
P[j] <- sum
}
P <- vapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
sum
}, numeric(1))
plot(omega, P, type = "l", col = 2)
P <- vapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
sum
}, numeric(1))
P <- sapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
sum
})
?par
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, delta)
startomega <- -6.4
endomega <- 6.4
omegasteps <- 2 ^ 11
deltaomega <- (endomega - startomega) / omegasteps
f <- function(x) {
3 * sin(5 * x) + 2 * sin(3 * x)
}
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, deltat)
omega <- seq(startomega, endomega, deltaomega)
omega
omega[2000]
t <- seq(a, b, deltat)
a <- 0
b <- 10
tsteps <- 2 ^ 9
deltat <- (b - a) / steps
deltat <- (b - a) / tsteps
omega <- seq(startomega, endomega, deltaomega)
t <- seq(a, b, deltat)
t
t[500]
P <- sapply(0:omegasteps, function(j){
sum <- 0
for (k in 1:tsteps) {
Psum <- (f(t[k]) * sin(2 * pi * omega[j] * t[k]) * deltat / (b - a))
sum <- sum + Psum
}
sum
})
install.packages("prophet")
library(prophet)
library(dplyr)
df <- read.csv('../examples/example_wp_peyton_manning.csv') %>%
mutate(y = log(y))
ls
dir
ls
getwd
getwd()
setwd("~/src/r")
setwd("~/src/r")
getwd()
library(prophet)
library(dplyr)
df <- read.csv('example_wp_peyton_manning.csv') %>%
mutate(y = log(y))
m <- prophet(df)
future <- make_future_dataframe(m, periods = 365)
tail(future)
forecast <- predict(m, future)
tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
plot(m, forecast)
prophet_plot_components(m, forecast)
plot(m, forecast)
library(ggplot2)
library(ggplot2)
qplot(m, forecast)
plot(m, forecast)
cubs <- read.csv("cubs.csv")
cubs
cubs[1]
cubs[2]
cubs[3]
names(cubs)
cubs[8]
plot(cubs[8])
plot(cubs[1], cubs[8])
qplot(cubs[1], cubs[8])
qplot(cubs[1], cubs[9])
qplot(cubs[1], cubs[8])
cubs <- read.csv('cubs.csv') %>%
mutate(cubs$W.L. = log(cubs$W.L.))
cubs <- read.csv('cubs.csv') %>%
mutate(cubs$W.L. = log(cubs$W.L.))
m <- prophet(df)
cubs <- read.csv('cubs.csv') %>%
mutate(cubs$W.L. = log(cubs$W.L.))
m <- prophet(cubs)
?prophet
cubs.csv <- read.csv('cubs.csv')
cubs <- data.frame(x = cubs.csv$Year, y = cubs.csv$W.L.) %>%
mutate(cubs$W.L. = log(cubs$W.L.))
cubs.csv$W.L.
typeof(cubs.csv$W.L.)
cubs.csv <- read.csv('cubs.csv')
cubs <- data.frame(x = cubs.csv$Year, y = cubs.csv$W.L.) %>%
mutate(y = log(y))
m <- prophet(cubs)
df
m <- prophet(cubs)
m <- prophet(df = cubs)
df <- read.csv('example_wp_peyton_manning.csv') %>%
mutate(y = log(y))
df
cubs
cubs.csv <- read.csv('cubs2.csv')
cubs.csv$W.L
cubs.csv$W.L.1
typeof(cubs.csv$W.L.1)
cubs.csv$W.L.1
cubs.csv$W.L.1[1]
cubs.csv$W.L.1[1,]
cubs.csv$W.L.1[[1]]
cubs.csv$W.L.1[1]
cubs.csv$W.L.1[2]
cubs.csv$W.L.1[3]
cubs.csv$W.L.1[4]
cubs.csv$W.L.1[5]
plot(cubs.csv$W.L.1)
strsplit(cubs.csv$W.L.1[5], "-")
strsplit(as.character(cubs.csv$W.L.1[5]), "-")
strsplit(as.character(cubs.csv$W.L.1[5]), "-")[1]
strsplit(as.character(cubs.csv$W.L.1[5]), "-")[2]
unlist(strsplit(as.character(cubs.csv$W.L.1[5]), "-"))
unlist(strsplit(as.character(cubs.csv$W.L.1[5]), "-"))[1]
unlist(strsplit(as.character(cubs.csv$W.L.1[5]), "-"))[2]
arr <- unlist(strsplit(as.character(cubs.csv$W.L.1[5]), "-"))
as.numeric(arr[1])
class(arr[1])
class(arr[2])
wl_to_pct <- function(wl){
arr <- unlist(strsplit(as.character(cubs.csv$W.L.1[5]), "-"))
w <- as.numeric(arr[1])
l <- as.numeric(arr[2])
return w/l
}
wl_to_pct <- function(wl){
arr <- unlist(strsplit(as.character(cubs.csv$W.L.1[5]), "-"))
w <- as.numeric(arr[1])
l <- as.numeric(arr[2])
return(w/l)
}
cubs <- data.frame(x = cubs.csv$Date, y = cubs.csv$W.L.1) %>%
mutate(y = log(wl_to_pct(y)))
m <- prophet(df = cubs)
cubs <- data.frame(x = cubs.csv$Date, y = cubs.csv$W.L.1) %>%
mutate(y = log(wl_to_pct(y)))
cubs
as.Date("Sunday Oct 2")
as.Date("Sunday Oct 2", "%A %b %d")
cubs <- data.frame(x = cubs.csv$Date, y = cubs.csv$W.L.1) %>%
mutate(y = log(wl_to_pct(y)), x = as.Date(x, "%A %b %d"))
cubs
cubs <- data.frame(x = cubs.csv$Date, y = cubs.csv$W.L.1) %>%
mutate(y = log(wl_to_pct(y)), x = as.Date(x, "%A %b %d"))
m <- prophet(df = cubs)
df
m <- prophet(cubs)
prophet(cubs)
cubs
df
cubs <- data.frame(ds = cubs.csv$Date, y = cubs.csv$W.L.1) %>%
mutate(y = log(wl_to_pct(y)), ds = as.Date(ds, "%A %b %d"))
m <- prophet(cubs)
future <- make_future_dataframe(m, periods = 365)
tail(future)
forecast <- predict(m, future)
tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
plot(m, forecast)
wl_to_pct <- function(wl){
arr <- unlist(strsplit(as.character(cubs.csv$W.L.1[5]), "-"))
w <- as.numeric(arr[1])
l <- as.numeric(arr[2])
return(w/w+l)
}
cubs <- data.frame(ds = cubs.csv$Date, y = cubs.csv$W.L.1) %>%
mutate(y = log(wl_to_pct(y)), ds = as.Date(ds, "%A %b %d"))
m <- prophet(cubs)
future <- make_future_dataframe(m, periods = 365)
tail(future)
forecast <- predict(m, future)
tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
plot(m, forecast)
